-- @nsURI MM=http://www.eclipse.org/uml2/5.0.0/UML

module merge;
create OUT : MM from IN : MM;

rule MergeModel {
    from
        i : MM!Model (i = MM!Model.allInstances().first())
    to
        o : MM!Model (
            name <- 'Model',
            packagedElement <- MM!Model.allInstances().excluding(o)->collect(model | model.packagedElement)
        )
}

rule MergeStateMachine {
    from
        i : MM!StateMachine (i = MM!StateMachine.allInstances().first())
    to
        sm : MM!StateMachine (
            name <- 'StateMachine',
			region <- MM!Region.allInstances()
        )
}

rule Region {
  from
    r : MM!Region (r = MM!Region.allInstances().first())
  to
    r_copy : MM!Region (
      name <- 'Region',
      subvertex <- MM!Vertex.allInstances(),
      transition <-  MM!Transition.allInstances()
	  )
}

rule transition{
	from
		trans_in : MM!Transition 
	to 
		trans_out : MM!Transition (
		name<- trans_in.name,
		source<- trans_in.source,
		target<- trans_in.target
	)
}

rule Pseudostate {
  from
    ps : MM!Pseudostate
  to
    ps_copy : MM!Pseudostate (
      name <- ps.name,
      kind <- ps.kind
    )
}

rule State {
  from
    s : MM!State (s.oclIsTypeOf(MM!State))
  to
    s_copy : MM!State (
      name <- s.name,
      entry <- s.entry,
      exit <- s.exit
    )
}

rule Final {
	from 
      s : MM!FinalState
	to 
	  s_copy : MM!FinalState(
	  	name <- s.name	
	  )
}

rule OpaqueBehavior{
  from 
	b : MM!OpaqueBehavior
  to
  	b_copy : MM!OpaqueBehavior(
  	  name <- b.name
  	)
}